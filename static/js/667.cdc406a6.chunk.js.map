{"version":3,"file":"static/js/667.cdc406a6.chunk.js","mappings":"6LAoDA,UAhDmB,WAAO,IAADA,EACvBC,GAAiBC,EAAAA,EAAAA,UAAS,CAAC,UAAW,UAAW,YAA1CC,GAAqDC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C,GAGPI,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAqC,QAA9BZ,EAAGU,EAAaG,IAAI,kBAAU,IAAAb,EAAAA,EAAI,GAiBzCc,EAAiBX,EAAOY,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAASL,EAAQ,IAErE,OACEM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,OAAOC,MAAOX,EAASY,SAff,SAAAC,GACxB,IAAMC,EAAeD,EAAEE,OAAOJ,MAE9B,GAAqB,KAAjBG,EACF,OAAOf,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,QAASc,GAC7B,KAQMR,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASM,QAAS,kBAAMjB,GAAiB,EAACS,SAAC,YAGxDF,EAAAA,EAAAA,KAAA,MAAAE,SACGN,EAAee,KAAI,SAAAb,GAClB,OACEE,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKhB,GAASiB,MAAO,CAAEC,KAAM7B,GAAWe,SAC7CJ,KAFIA,EAMb,UAKV,C","sources":["pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import { useEffect } from 'react';\n\nconst MoviesPage = () => {\n  const [movies] = useState(['movie-1', 'movie-2', 'movie-3']);\n\n  //отримуємо обʼєкт місця положення\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? ''; // читаємо по імені параметра (знач з інпуту), якщо його нема - ставимо '', щоб при видаленні введених даних зникав = з адресного рядку та знову рендерився увесь список, інакше null\n\n  // useEffect(() => {\n  //   //http запит\n  // }, []);\n\n  //записуємо зі знач переметру\n  const updateQuerystring = e => {\n    const movieIdValue = e.target.value;\n    //якщо в інпуті e.target.value '', то передаємо порожній {}\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    //якщо в інпуті movieIdValue НЕ '', то передаємо значення інпуту\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n  const filteredMovies = movies.filter(movie => movie.includes(movieId));\n\n  return (\n    <>\n      <div>\n        <input type=\"text\" value={movieId} onChange={updateQuerystring} />\n        <button type=\"submit\" onClick={() => setSearchParams()}>\n          Search\n        </button>\n        <ul>\n          {filteredMovies.map(movie => {\n            return (\n              <li key={movie}>\n                <Link to={`${movie}`} state={{ from: location }}>\n                  {movie}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["_searchParams$get","_useState","useState","movies","_slicedToArray","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieId","get","filteredMovies","filter","movie","includes","_jsx","_Fragment","children","_jsxs","type","value","onChange","e","movieIdValue","target","onClick","map","Link","to","concat","state","from"],"sourceRoot":""}